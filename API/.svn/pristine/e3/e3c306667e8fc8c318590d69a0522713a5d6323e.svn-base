using SupremeCourtCore.Common;
using SupremeCourtCore.Domain;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SupremeCourtCore.Infrastructure
{
    public interface ActionTypeDAO
    {
        List<ActionType> GetAllActionTypes(DBConnection dbConnection);
        ActionType GetActionType(int id, DBConnection dbConnection);
        int AddActionType(ActionType actionType, DBConnection dbConnection);
        int UpdateActionType(ActionType actionType, DBConnection dbConnection);
        int DeleteActionType(int actionTypeId, DBConnection dbConnection);
    }

    public class ActionTypeSqlDAOImpl : ActionTypeDAO
    {
        public int AddActionType(ActionType actionType, DBConnection dbConnection)
        {
            dbConnection.cmd.CommandText = "INSERT INTO ACTION_TYPE(NAME,IS_ACTIVE) VALUES('" + actionType.name + "',1) SELECT SCOPE_IDENTITY()";
            return Convert.ToInt32(dbConnection.cmd.ExecuteScalar());
        }

        public List<ActionType> GetAllActionTypes(DBConnection dbConnection)
        {
            dbConnection.cmd.CommandText = "SELECT * FROM ACTION_TYPE WHERE IS_ACTIVE = 1";

            dbConnection.dr = dbConnection.cmd.ExecuteReader();
            DataAccessObject dataAccessObject = new DataAccessObject();
            return dataAccessObject.ReadCollection<ActionType>(dbConnection.dr);
        }

        public ActionType GetActionType(int id, DBConnection dbConnection)
        {
            dbConnection.cmd.CommandText = "SELECT * FROM ACTION_TYPE WHERE ID = " + id + " ";

            dbConnection.dr = dbConnection.cmd.ExecuteReader();
            DataAccessObject dataAccessObject = new DataAccessObject();
            return dataAccessObject.GetSingleOject<ActionType>(dbConnection.dr);
        }

        public int UpdateActionType(ActionType actionType, DBConnection dbConnection)
        {
            dbConnection.cmd.CommandText = "UPDATE ACTION_TYPE SET NAME = '" + actionType.name + "', IS_ACTIVE = "+ actionType.isActive+ "  WHERE ID = " + actionType.id;
            return dbConnection.cmd.ExecuteNonQuery();
        }
        
        public int DeleteActionType(int actionTypeId, DBConnection dbConnection)
        {
            dbConnection.cmd.CommandText = "UPDATE ACTION_TYPE SET IS_ACTIVE = 0  WHERE ID = " + actionTypeId;
            return dbConnection.cmd.ExecuteNonQuery();
        }
    }

    public class ActionTypeDAOImpl : ActionTypeDAO
    {
        public int AddActionType(ActionType actionType, DBConnection dbConnection)
        {
            dbConnection.cmd.CommandText = "INSERT INTO ACTION_TYPE(NAME,IS_ACTIVE) VALUES('" + actionType.name + "',1); SELECT currval('action_type_id_seq');";
            return Convert.ToInt32(dbConnection.cmd.ExecuteScalar());
        }

        public List<ActionType> GetAllActionTypes(DBConnection dbConnection)
        {
            dbConnection.cmd.CommandText = "SELECT * FROM ACTION_TYPE WHERE IS_ACTIVE = 1";

            dbConnection.dr = dbConnection.cmd.ExecuteReader();
            DataAccessObject dataAccessObject = new DataAccessObject();
            return dataAccessObject.ReadCollection<ActionType>(dbConnection.dr);
        }

        public ActionType GetActionType(int id, DBConnection dbConnection)
        {
            dbConnection.cmd.CommandText = "SELECT * FROM ACTION_TYPE WHERE ID = " + id + " ";

            dbConnection.dr = dbConnection.cmd.ExecuteReader();
            DataAccessObject dataAccessObject = new DataAccessObject();
            return dataAccessObject.GetSingleOject<ActionType>(dbConnection.dr);
        }

        public int UpdateActionType(ActionType actionType, DBConnection dbConnection)
        {
            dbConnection.cmd.CommandText = "UPDATE ACTION_TYPE SET NAME = '" + actionType.name + "', IS_ACTIVE = " + actionType.isActive + "  WHERE ID = " + actionType.id;
            return dbConnection.cmd.ExecuteNonQuery();
        }

        public int DeleteActionType(int actionTypeId, DBConnection dbConnection)
        {
            dbConnection.cmd.CommandText = "UPDATE ACTION_TYPE SET IS_ACTIVE = 0  WHERE ID = " + actionTypeId;
            return dbConnection.cmd.ExecuteNonQuery();
        }
    }
}
