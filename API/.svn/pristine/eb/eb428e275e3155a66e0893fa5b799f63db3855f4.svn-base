using System;
using System.Collections.Generic;
using SupremeCourtCore.Common;
using SupremeCourtCore.Domain;
using SupremeCourtCore.Infrastructure;
using System.Linq;
using System.Text;
using System.Threading.Tasks;


namespace SupremeCourtCore.Controller
{
    public interface ActionTypeController
    {
        List<ActionType> GetAllActionTypes();
        ActionType GetActionType(int id);
        int AddActionType(ActionType actionType);
        int UpdateActionType(ActionType actionType);
        int DeleteActionType(int actionTypeId);
    }

    public class ActionTypeControllerImpl : ActionTypeController
    {
        DBConnection dBConnection;
        ActionTypeDAO OrderTypeDAO = DAOFactory.CreateActionTypeDAO();
        public int AddActionType(ActionType actionType)
        {
            try
            {
                dBConnection = new DBConnection();
                return OrderTypeDAO.AddActionType(actionType, dBConnection);
            }
            catch (Exception)
            {
                dBConnection.RollBack();

                throw;
            }
            finally
            {
                if (dBConnection.con.State == System.Data.ConnectionState.Open)
                    dBConnection.Commit();
            }
        }

        public int DeleteActionType(int actionTypeId)
        {
            try
            {
                dBConnection = new DBConnection();
                return OrderTypeDAO.DeleteActionType(actionTypeId, dBConnection);
            }
            catch (Exception)
            {
                dBConnection.RollBack();

                throw;
            }
            finally
            {
                if (dBConnection.con.State == System.Data.ConnectionState.Open)
                    dBConnection.Commit();
            }
        }

        public ActionType GetActionType(int id)
        {
            try
            {
                dBConnection = new DBConnection();
                return OrderTypeDAO.GetActionType(id, dBConnection);
            }
            catch (Exception)
            {
                dBConnection.RollBack();

                throw;
            }
            finally
            {
                if (dBConnection.con.State == System.Data.ConnectionState.Open)
                    dBConnection.Commit();
            }
        }

        public List<ActionType> GetAllActionTypes()
        {
            try
            {
                dBConnection = new DBConnection();
                return OrderTypeDAO.GetAllActionTypes(dBConnection);
            }
            catch (Exception)
            {
                dBConnection.RollBack();

                throw;
            }
            finally
            {
                if (dBConnection.con.State == System.Data.ConnectionState.Open)
                    dBConnection.Commit();
            }
        }

        public int UpdateActionType(ActionType actionType)
        {
            try
            {
                dBConnection = new DBConnection();
                return OrderTypeDAO.UpdateActionType(actionType,dBConnection);
            }
            catch (Exception)
            {
                dBConnection.RollBack();

                throw;
            }
            finally
            {
                if (dBConnection.con.State == System.Data.ConnectionState.Open)
                    dBConnection.Commit();
            }
        }
    }
}
