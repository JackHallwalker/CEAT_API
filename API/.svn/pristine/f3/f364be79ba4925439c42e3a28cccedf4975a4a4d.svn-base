using System;
using System.Collections.Generic;
using SupremeCourtCore.Common;
using SupremeCourtCore.Domain;
using SupremeCourtCore.Infrastructure;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SupremeCourtCore.Controller
{
    public interface CategoryController
    {
        List<Category> GetAllCategories();
        Category GetCategory(int id);
        int AddCategory(Category category);
        int UpdateCategory(Category category);
    }

    public class CategoryControllerImpl : CategoryController
    {
        DBConnection dBConnection;
        CategoryDAO OrderTypeDAO = DAOFactory.CreateCategoryDAO();
        public int AddCategory(Category category)
        {
            try
            {
                dBConnection = new DBConnection();
                return OrderTypeDAO.AddCategory(category, dBConnection);
            }
            catch (Exception)
            {
                dBConnection.RollBack();

                throw;
            }
            finally
            {
                if (dBConnection.con.State == System.Data.ConnectionState.Open)
                    dBConnection.Commit();
            }
        }

        public List<Category> GetAllCategories()
        {
            try
            {
                dBConnection = new DBConnection();
                return OrderTypeDAO.GetAllCategories(dBConnection);
            }
            catch (Exception)
            {
                dBConnection.RollBack();

                throw;
            }
            finally
            {
                if (dBConnection.con.State == System.Data.ConnectionState.Open)
                    dBConnection.Commit();
            }
        }

        public Category GetCategory(int id)
        {
            try
            {
                dBConnection = new DBConnection();
                return OrderTypeDAO.GetCategory(id,dBConnection);
            }
            catch (Exception)
            {
                dBConnection.RollBack();

                throw;
            }
            finally
            {
                if (dBConnection.con.State == System.Data.ConnectionState.Open)
                    dBConnection.Commit();
            }
        }

        public int UpdateCategory(Category category)
        {
            try
            {
                dBConnection = new DBConnection();
                return OrderTypeDAO.UpdateCategory(category, dBConnection);
            }
            catch (Exception)
            {
                dBConnection.RollBack();

                throw;
            }
            finally
            {
                if (dBConnection.con.State == System.Data.ConnectionState.Open)
                    dBConnection.Commit();
            }
        }
    }
}
