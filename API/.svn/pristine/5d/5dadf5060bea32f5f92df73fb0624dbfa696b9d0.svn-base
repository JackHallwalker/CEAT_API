using System;
using System.Collections.Generic;
using SupremeCourtCore.Common;
using SupremeCourtCore.Domain;
using SupremeCourtCore.Infrastructure;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SupremeCourtCore.Controller
{
    public interface SystemRoleController
    {
        List<SystemRole> GetAllSystemRoles(int systemId);
        SystemRole GetSystemRole(int id);
        int AddSystemRole(SystemRole systemRole);
        int UpdateSystemRole(SystemRole systemRole);
    }

    public class SystemRoleControllerImpl : SystemRoleController
    {
        DBConnection dBConnection;
        SystemRoleDAO OrderTypeDAO = DAOFactory.CreateSystemRoleDAO();
        public int AddSystemRole(SystemRole systemRole)
        {
            try
            {
                dBConnection = new DBConnection();
                return OrderTypeDAO.AddSystemRole(systemRole, dBConnection);
            }
            catch (Exception)
            {
                dBConnection.RollBack();

                throw;
            }
            finally
            {
                if (dBConnection.con.State == System.Data.ConnectionState.Open)
                    dBConnection.Commit();
            }
        }

        public List<SystemRole> GetAllSystemRoles(int systemId)
        {
            try
            {
                dBConnection = new DBConnection();
                return OrderTypeDAO.GetAllSystemRoles(systemId, dBConnection);
            }
            catch (Exception)
            {
                dBConnection.RollBack();

                throw;
            }
            finally
            {
                if (dBConnection.con.State == System.Data.ConnectionState.Open)
                    dBConnection.Commit();
            }
        }

        public SystemRole GetSystemRole(int id)
        {
            try
            {
                dBConnection = new DBConnection();
                return OrderTypeDAO.GetSystemRole(id, dBConnection);
            }
            catch (Exception)
            {
                dBConnection.RollBack();

                throw;
            }
            finally
            {
                if (dBConnection.con.State == System.Data.ConnectionState.Open)
                    dBConnection.Commit();
            }
        }

        public int UpdateSystemRole(SystemRole systemRole)
        {
            try
            {
                dBConnection = new DBConnection();
                return OrderTypeDAO.UpdateSystemRole(systemRole, dBConnection);
            }
            catch (Exception)
            {
                dBConnection.RollBack();

                throw;
            }
            finally
            {
                if (dBConnection.con.State == System.Data.ConnectionState.Open)
                    dBConnection.Commit();
            }
        }
    }
}
