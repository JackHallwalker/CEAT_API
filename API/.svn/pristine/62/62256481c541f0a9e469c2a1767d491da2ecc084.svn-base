using SupremeCourtCore.Common;
using SupremeCourtCore.Domain;
using SupremeCourtCore.Infrastructure;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SupremeCourtCore.Controller
{
    public interface MealPlanController
    {
        List<MealPlan> GetAllMealPlans();
        MealPlan GetMealPlan(int id);
        int AddMealPlan(MealPlan mealPlan);
        int UpdateMealPlan(MealPlan mealPlan);
        int DeleteMealPlan(MealPlan mealPlan);
    }

    public class MealPlanControllerImpl : MealPlanController
    {
        DBConnection dBConnection;
        MealPlanDAO OrderTypeDAO = DAOFactory.CreateMealPlanDAO();

        public List<MealPlan> GetAllMealPlans()
        {
            try
            {
                dBConnection = new DBConnection();
                return OrderTypeDAO.GetAllMealPlans(dBConnection);

            }
            catch (Exception)
            {
                dBConnection.RollBack();

                throw;
            }
            finally
            {
                if (dBConnection.con.State == System.Data.ConnectionState.Open)
                    dBConnection.Commit();
            }

        }

        public MealPlan GetMealPlan(int id)
        {
            try
            {
                dBConnection = new DBConnection();
                return OrderTypeDAO.GetMealPlan(id, dBConnection);
            }
            catch (Exception)
            {
                dBConnection.RollBack();

                throw;
            }
            finally
            {
                if (dBConnection.con.State == System.Data.ConnectionState.Open)
                    dBConnection.Commit();
            }

        }

        public int AddMealPlan(MealPlan mealPlan)
        {
            try
            {
                dBConnection = new DBConnection();
                return OrderTypeDAO.AddMealPlan(mealPlan, dBConnection);
            }
            catch (Exception)
            {
                dBConnection.RollBack();

                throw;
            }
            finally
            {
                if (dBConnection.con.State == System.Data.ConnectionState.Open)
                    dBConnection.Commit();
            }
        }

        public int UpdateMealPlan(MealPlan mealPlan)
        {
            try
            {
                dBConnection = new DBConnection();
                return OrderTypeDAO.UpdateMealPlan(mealPlan, dBConnection);
            }
            catch (Exception)
            {
                dBConnection.RollBack();

                throw;
            }
            finally
            {
                if (dBConnection.con.State == System.Data.ConnectionState.Open)
                    dBConnection.Commit();
            }
        }

        public int DeleteMealPlan(MealPlan mealPlan)
        {
            try
            {
                dBConnection = new DBConnection();
                return OrderTypeDAO.DeleteMealPlan(mealPlan, dBConnection);
            }
            catch (Exception)
            {
                dBConnection.RollBack();

                throw;
            }
            finally
            {
                if (dBConnection.con.State == System.Data.ConnectionState.Open)
                    dBConnection.Commit();
            }
        }
    }
}
