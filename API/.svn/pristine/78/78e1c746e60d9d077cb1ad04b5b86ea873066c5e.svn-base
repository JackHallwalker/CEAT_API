using System;
using System.Collections.Generic;
using SupremeCourtCore.Common;
using SupremeCourtCore.Domain;
using SupremeCourtCore.Infrastructure;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SupremeCourtCore.Controller
{
    public interface LawyerController
    {
        List<Lawyer> GetAllLawyers();
        Lawyer GetLawyer(int id);
        int AddLawyer(Lawyer lawyer);
        int UpdateLawyer(Lawyer lawyer);
        int DeleteLawyer(int lawyerId);
        List<Schedule> GetLawyerSchedule(int lawyerId);
        List<Schedule> GetLawyerScheduleByDate(int lawyerId, string date);
    }

    public class LawyerControllerImpl : LawyerController
    {
        DBConnection dBConnection;
        LawyerDAO OrderTypeDAO = DAOFactory.CreateLawyerDAO();

        public int AddLawyer(Lawyer lawyer)
        {
            try
            {
                dBConnection = new DBConnection();
                return OrderTypeDAO.AddLawyer(lawyer, dBConnection);
            }
            catch (Exception)
            {
                dBConnection.RollBack();

                throw;
            }
            finally
            {
                if (dBConnection.con.State == System.Data.ConnectionState.Open)
                    dBConnection.Commit();
            }
        }

        public int DeleteLawyer(int lawyerId)
        {
            try
            {
                dBConnection = new DBConnection();
                return OrderTypeDAO.DeleteLawyer(lawyerId, dBConnection);
            }
            catch (Exception)
            {
                dBConnection.RollBack();

                throw;
            }
            finally
            {
                if (dBConnection.con.State == System.Data.ConnectionState.Open)
                    dBConnection.Commit();
            }
        }

        public List<Lawyer> GetAllLawyers()
        {
            try
            {
                dBConnection = new DBConnection();
                return OrderTypeDAO.GetAllLawyers(dBConnection);
            }
            catch (Exception)
            {
                dBConnection.RollBack();

                throw;
            }
            finally
            {
                if (dBConnection.con.State == System.Data.ConnectionState.Open)
                    dBConnection.Commit();
            }
        }

        public Lawyer GetLawyer(int id)
        {
            try
            {
                dBConnection = new DBConnection();
                return OrderTypeDAO.GetLawyer(id, dBConnection);
            }
            catch (Exception)
            {
                dBConnection.RollBack();

                throw;
            }
            finally
            {
                if (dBConnection.con.State == System.Data.ConnectionState.Open)
                    dBConnection.Commit();
            }
        }

        public int UpdateLawyer(Lawyer lawyer)
        {
            try
            {
                dBConnection = new DBConnection();
                return OrderTypeDAO.UpdateLawyer(lawyer, dBConnection);
            }
            catch (Exception)
            {
                dBConnection.RollBack();

                throw;
            }
            finally
            {
                if (dBConnection.con.State == System.Data.ConnectionState.Open)
                    dBConnection.Commit();
            }
        }

        public List<Schedule> GetLawyerSchedule(int lawyerId)
        {
            try
            {
                dBConnection = new DBConnection();
                return OrderTypeDAO.GetLawyerSchedule(lawyerId, dBConnection);
            }
            catch (Exception)
            {
                dBConnection.RollBack();

                throw;
            }
            finally
            {
                if (dBConnection.con.State == System.Data.ConnectionState.Open)
                    dBConnection.Commit();
            }
        }

        public List<Schedule> GetLawyerScheduleByDate(int lawyerId, string date)
        {
            try
            {
                dBConnection = new DBConnection();
                return OrderTypeDAO.GetLawyerScheduleByDate(lawyerId, date, dBConnection);
            }
            catch (Exception)
            {
                dBConnection.RollBack();

                throw;
            }
            finally
            {
                if (dBConnection.con.State == System.Data.ConnectionState.Open)
                    dBConnection.Commit();
            }
        }
    }
}
