using System;
using System.Collections.Generic;
using SupremeCourtCore.Common;
using SupremeCourtCore.Domain;
using SupremeCourtCore.Infrastructure;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SupremeCourtCore.Controller
{
    public interface SystemFunctionController
    {
        List<SystemFunction> GetAllSystemFunctions(int systemId);
        SystemFunction GetSystemFunction(int id);
        int AddSystemFunction(SystemFunction systemFunction);
        int UpdateSystemFunction(SystemFunction systemFunction);
        int DeleteSystemFunction(int systemFunctionId);
    }

    public class SystemFunctionControllerImpl : SystemFunctionController
    {
        DBConnection dBConnection;
        SystemFunctionDAO OrderTypeDAO = DAOFactory.CreateSystemFunctionDAO();

        public int AddSystemFunction(SystemFunction systemFunction)
        {
            try
            {
                dBConnection = new DBConnection();
                return OrderTypeDAO.AddSystemFunction(systemFunction, dBConnection);
            }
            catch (Exception)
            {
                dBConnection.RollBack();

                throw;
            }
            finally
            {
                if (dBConnection.con.State == System.Data.ConnectionState.Open)
                    dBConnection.Commit();
            }
        }

        public int DeleteSystemFunction(int systemFunctionId)
        {
            try
            {
                dBConnection = new DBConnection();
                return OrderTypeDAO.DeleteSystemFunction(systemFunctionId, dBConnection);
            }
            catch (Exception)
            {
                dBConnection.RollBack();

                throw;
            }
            finally
            {
                if (dBConnection.con.State == System.Data.ConnectionState.Open)
                    dBConnection.Commit();
            }
        }

        public List<SystemFunction> GetAllSystemFunctions(int systemId)
        {
            try
            {
                dBConnection = new DBConnection();
                return OrderTypeDAO.GetAllSystemFunctions(systemId, dBConnection);
            }
            catch (Exception)
            {
                dBConnection.RollBack();

                throw;
            }
            finally
            {
                if (dBConnection.con.State == System.Data.ConnectionState.Open)
                    dBConnection.Commit();
            }
        }

        public SystemFunction GetSystemFunction(int id)
        {
            try
            {
                dBConnection = new DBConnection();
                return OrderTypeDAO.GetSystemFunction(id, dBConnection);
            }
            catch (Exception)
            {
                dBConnection.RollBack();

                throw;
            }
            finally
            {
                if (dBConnection.con.State == System.Data.ConnectionState.Open)
                    dBConnection.Commit();
            }
        }

        public int UpdateSystemFunction(SystemFunction systemFunction)
        {
            try
            {
                dBConnection = new DBConnection();
                return OrderTypeDAO.UpdateSystemFunction(systemFunction, dBConnection);
            }
            catch (Exception)
            {
                dBConnection.RollBack();

                throw;
            }
            finally
            {
                if (dBConnection.con.State == System.Data.ConnectionState.Open)
                    dBConnection.Commit();
            }
        }
    }
}
