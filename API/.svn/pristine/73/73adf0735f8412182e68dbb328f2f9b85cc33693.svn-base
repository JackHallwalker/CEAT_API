using System;
using System.Collections.Generic;
using SupremeCourtCore.Common;
using SupremeCourtCore.Domain;
using SupremeCourtCore.Infrastructure;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SupremeCourtCore.Controller
{
    public interface CourtController
    {
        List<Court> GetAllCourts();
        Court GetCourt(int id);
        int AddCourt(Court court);
        int UpdateCourt(Court court);
        int DeleteCourt(int courtId);
    }

    public class CourtControllerImpl : CourtController
    {
        DBConnection dBConnection;
        CourtDAO OrderTypeDAO = DAOFactory.CreateCourtDAO();
        public int AddCourt(Court court)
        {
            try
            {
                dBConnection = new DBConnection();
                return OrderTypeDAO.AddCourt(court, dBConnection);
            }
            catch (Exception)
            {
                dBConnection.RollBack();

                throw;
            }
            finally
            {
                if (dBConnection.con.State == System.Data.ConnectionState.Open)
                    dBConnection.Commit();
            }
        }

        public int DeleteCourt(int courtId)
        {
            try
            {
                dBConnection = new DBConnection();
                return OrderTypeDAO.DeleteCourt(courtId, dBConnection);
            }
            catch (Exception)
            {
                dBConnection.RollBack();

                throw;
            }
            finally
            {
                if (dBConnection.con.State == System.Data.ConnectionState.Open)
                    dBConnection.Commit();
            }
        }

        public List<Court> GetAllCourts()
        {
            try
            {
                dBConnection = new DBConnection();
                return OrderTypeDAO.GetAllCourts(dBConnection);
            }
            catch (Exception)
            {
                dBConnection.RollBack();

                throw;
            }
            finally
            {
                if (dBConnection.con.State == System.Data.ConnectionState.Open)
                    dBConnection.Commit();
            }
        }

        public Court GetCourt(int id)
        {
            try
            {
                dBConnection = new DBConnection();
                return OrderTypeDAO.GetCourt(id, dBConnection);
            }
            catch (Exception)
            {
                dBConnection.RollBack();

                throw;
            }
            finally
            {
                if (dBConnection.con.State == System.Data.ConnectionState.Open)
                    dBConnection.Commit();
            }
        }

        public int UpdateCourt(Court court)
        {
            try
            {
                dBConnection = new DBConnection();
                return OrderTypeDAO.UpdateCourt(court, dBConnection);
            }
            catch (Exception)
            {
                dBConnection.RollBack();

                throw;
            }
            finally
            {
                if (dBConnection.con.State == System.Data.ConnectionState.Open)
                    dBConnection.Commit();
            }
        }
    }
}
